{"version":3,"sources":["components/SearchBox.js","components/Scroll.js","components/CardList.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","CardList","robots","Error","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","res","json","users","filteredRobots","filter","name","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAeeA,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,qBAAKC,UAAU,MAAf,SACE,uBACEA,UAAU,iCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCEHK,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCiBEC,EApBE,SAAC,GAAe,EAAbC,OAEhB,MAAM,IAAIC,MAAM,oBCiBLC,E,kDAnBb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAS,CACZC,UAAU,GAHK,E,8DAODC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAGG,KAAKJ,MAAMC,SACL,8DAEFG,KAAKd,MAAMK,a,GAhBMW,aCgDbC,G,wDA1Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAb1C,EAAKZ,MAAQ,CACXH,OAAQ,GACRa,YAAa,IAJH,E,gEAQO,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACR,OAAQoB,S,+BAOhC,IAAD,OACDC,EAAiBd,KAAKJ,MAAMH,OAAOsB,QAAO,SAACtB,GAC/C,OAAOA,EAAOuB,KACXC,cACAC,SAAS,EAAKtB,MAAMU,YAAYW,kBAErC,OAAiC,IAA7BjB,KAAKJ,MAAMH,OAAO0B,OACb,4CAGL,sBAAKtC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAcoB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACA,cAAC,EAAD,CAAUX,OAAQqB,e,GAlCZZ,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.150ecde1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input \r\n        className='tc pa3 b--red bg-lightest-blue'\r\n        type=\"search\"\r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n         />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll","import { React } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  if (true) {\r\n    throw new Error('NOOOOOOOOOOOOOO')\r\n  }\r\n  return (\r\n    <div>\r\n      {robots.map((user) => {\r\n        return (\r\n          <Card\r\n            key={user.id}\r\n            id={user.id}\r\n            name={user.name}\r\n            email={user.email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state =  {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({hasError: true})\r\n  }\r\n\r\n  render() {\r\n    if(this.state.hasError) {\r\n      return <h1>Oooops. Something went wrong</h1>\r\n    } \r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from \"react\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport CardList from \"../components/CardList\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(res => res.json())\r\n      .then(users => this.setState({robots: users}));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const filteredRobots = this.state.robots.filter((robots) => {\r\n      return robots.name\r\n        .toLowerCase()\r\n        .includes(this.state.searchfield.toLowerCase());\r\n    });\r\n    if (this.state.robots.length === 0) {\r\n      return <h1>Loading...</h1>;\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\">RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <ErrorBoundary>\r\n            <CardList robots={filteredRobots} />\r\n            </ErrorBoundary>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}